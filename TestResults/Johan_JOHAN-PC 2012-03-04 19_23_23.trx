<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="ff808aa8-bf4f-456e-83b3-a3b436fa0e0e" name="Johan@JOHAN-PC 2012-03-04 19:23:23" runUser="Johan-PC\Johan" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="39875048-2048-441b-8624-86654f126164">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment enabled="false" runDeploymentRoot="Johan_JOHAN-PC 2012-03-04 19_23_23">
      <DeploymentItem filename="C:\Users\Johan\Documents\projects\RapidCase\packages\Selenium.WebDriver.2.20.0\lib\net40\WebDriver.dll" />
      <DeploymentItem filename="C:\Users\Johan\Documents\projects\RapidCase\packages\SpecFlow.1.8.1\lib\net35\TechTalk.SpecFlow.dll" />
      <DeploymentItem filename="C:\Users\Johan\Documents\projects\RapidCase\RapidCase.Common\bin\Debug\RapidCase.Common.dll" />
      <DeploymentItem filename="C:\Users\Johan\Documents\projects\RapidCase\packages\DotNetZip.1.9.1.8\lib\net20\Ionic.Zip.dll" />
      <DeploymentItem filename="C:\Users\Johan\Documents\projects\RapidCase\packages\Newtonsoft.Json.4.0.6\lib\net40\Newtonsoft.Json.dll" />
    </Deployment>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2012-03-04T19:23:23.2248497+01:00" queuing="2012-03-04T19:23:23.3058543+01:00" start="2012-03-04T19:23:23.3158549+01:00" finish="2012-03-04T19:23:39.8257992+01:00" />
  <ResultSummary outcome="Inconclusive">
    <Counters total="5" executed="5" passed="2" error="0" failed="0" timeout="0" aborted="0" inconclusive="3" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="ShowDatabaseLocationSelectionScreenIfDatabaseLocationIsMissing" storage="c:\users\johan\documents\projects\rapidcase\rapidcase.basicsystem.specifications\bin\debug\rapidcase.basicsystem.specifications.dll" id="607ad56f-0bd1-54e5-69b6-976f368d808a">
      <Description>Show database location selection screen if database location is missing</Description>
      <TestCategory>
        <TestCategoryItem TestCategory="web" />
      </TestCategory>
      <Execution id="bebaacea-f2f0-4fe7-8f3c-bff1c1a3b281" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Initial set up</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Users/Johan/Documents/projects/RapidCase/RapidCase.BasicSystem.Specifications/bin/Debug/RapidCase.BasicSystem.Specifications.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="RapidCase.BasicSystem.Specifications.Setup.InitialSetUpFeature, RapidCase.BasicSystem.Specifications, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="ShowDatabaseLocationSelectionScreenIfDatabaseLocationIsMissing" />
    </UnitTest>
    <UnitTest name="SelectRemoteMachineAsDatabaseLocation" storage="c:\users\johan\documents\projects\rapidcase\rapidcase.basicsystem.specifications\bin\debug\rapidcase.basicsystem.specifications.dll" id="1cf2fcd1-9bb4-7359-640e-ae1d47b72bd4">
      <Description>Select remote machine as database location</Description>
      <TestCategory>
        <TestCategoryItem TestCategory="web" />
      </TestCategory>
      <Execution id="aa8453aa-340f-4777-bbb9-d511cba385b0" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Initial set up</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Users/Johan/Documents/projects/RapidCase/RapidCase.BasicSystem.Specifications/bin/Debug/RapidCase.BasicSystem.Specifications.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="RapidCase.BasicSystem.Specifications.Setup.InitialSetUpFeature, RapidCase.BasicSystem.Specifications, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="SelectRemoteMachineAsDatabaseLocation" />
    </UnitTest>
    <UnitTest name="EnterANewPasswordForTheAdministrator" storage="c:\users\johan\documents\projects\rapidcase\rapidcase.basicsystem.specifications\bin\debug\rapidcase.basicsystem.specifications.dll" id="15bede2b-2c9d-8036-da77-19a81576e5a2">
      <Description>Enter a new password for the administrator</Description>
      <TestCategory>
        <TestCategoryItem TestCategory="web" />
      </TestCategory>
      <Execution id="de6e7aec-5647-4c5c-a1ef-76515bd72af6" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Initial set up</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Users/Johan/Documents/projects/RapidCase/RapidCase.BasicSystem.Specifications/bin/Debug/RapidCase.BasicSystem.Specifications.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="RapidCase.BasicSystem.Specifications.Setup.InitialSetUpFeature, RapidCase.BasicSystem.Specifications, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="EnterANewPasswordForTheAdministrator" />
    </UnitTest>
    <UnitTest name="RequestPasswordForAdministratorIfItDoNotExist" storage="c:\users\johan\documents\projects\rapidcase\rapidcase.basicsystem.specifications\bin\debug\rapidcase.basicsystem.specifications.dll" id="d03fd5bb-1d9d-bcd8-672f-ac6c1bcf1a73">
      <Description>Request password for administrator if it do not exist</Description>
      <TestCategory>
        <TestCategoryItem TestCategory="web" />
      </TestCategory>
      <Execution id="796fc4d6-0e86-4d3f-bbc9-592a1b3b380b" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Initial set up</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Users/Johan/Documents/projects/RapidCase/RapidCase.BasicSystem.Specifications/bin/Debug/RapidCase.BasicSystem.Specifications.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="RapidCase.BasicSystem.Specifications.Setup.InitialSetUpFeature, RapidCase.BasicSystem.Specifications, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="RequestPasswordForAdministratorIfItDoNotExist" />
    </UnitTest>
    <UnitTest name="EnterSetupInformationCorrect" storage="c:\users\johan\documents\projects\rapidcase\rapidcase.basicsystem.specifications\bin\debug\rapidcase.basicsystem.specifications.dll" id="5abbfa87-d65c-c25d-a8cd-0901fe713af4">
      <Description>Enter setup information correct</Description>
      <TestCategory>
        <TestCategoryItem TestCategory="web" />
      </TestCategory>
      <Execution id="85ace593-7187-41d1-80cb-7c1bd86181b2" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Initial set up</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Users/Johan/Documents/projects/RapidCase/RapidCase.BasicSystem.Specifications/bin/Debug/RapidCase.BasicSystem.Specifications.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="RapidCase.BasicSystem.Specifications.Setup.InitialSetUpFeature, RapidCase.BasicSystem.Specifications, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="EnterSetupInformationCorrect" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="15bede2b-2c9d-8036-da77-19a81576e5a2" executionId="de6e7aec-5647-4c5c-a1ef-76515bd72af6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1cf2fcd1-9bb4-7359-640e-ae1d47b72bd4" executionId="aa8453aa-340f-4777-bbb9-d511cba385b0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5abbfa87-d65c-c25d-a8cd-0901fe713af4" executionId="85ace593-7187-41d1-80cb-7c1bd86181b2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="607ad56f-0bd1-54e5-69b6-976f368d808a" executionId="bebaacea-f2f0-4fe7-8f3c-bff1c1a3b281" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d03fd5bb-1d9d-bcd8-672f-ac6c1bcf1a73" executionId="796fc4d6-0e86-4d3f-bbc9-592a1b3b380b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="de6e7aec-5647-4c5c-a1ef-76515bd72af6" testId="15bede2b-2c9d-8036-da77-19a81576e5a2" testName="EnterANewPasswordForTheAdministrator" computerName="JOHAN-PC" duration="00:00:01.1000555" startTime="2012-03-04T19:23:23.3198551+01:00" endTime="2012-03-04T19:23:31.8613437+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="de6e7aec-5647-4c5c-a1ef-76515bd72af6">
      <Output>
        <StdOut>Given Administrator do not have a password
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"Administrator do not have a password")]
        public void GivenAdministratorDoNotHaveAPassword()
        {
            ScenarioContext.Current.Pending();
        }
    }

And I have navigated to the default page
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"I have navigated to the default page")]
        public void GivenIHaveNavigatedToTheDefaultPage()
        {
            ScenarioContext.Current.Pending();
        }
    }

And I am requested to enter a password for the administrator
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"I am requested to enter a password for the administrator")]
        public void GivenIAmRequestedToEnterAPasswordForTheAdministrator()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I enter test123 as password and click the submit button
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I enter test123 as password and click the submit button")]
        public void WhenIEnterTest123AsPasswordAndClickTheSubmitButton()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then test123 will be saved as the password for the administrator and navigated to RapidCase Development Studio
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"test123 will be saved as the password for the administrator and navigated to RapidCase Development Studio")]
        public void ThenTest123WillBeSavedAsThePasswordForTheAdministratorAndNavigatedToRapidCaseDevelopmentStudio()
        {
            ScenarioContext.Current.Pending();
        }
    }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"Administrator do not have a password")]
    public void GivenAdministratorDoNotHaveAPassword()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"I am requested to enter a password for the administrator")]
    public void GivenIAmRequestedToEnterAPasswordForTheAdministrator()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Given(@"I have navigated to the default page")]
    public void GivenIHaveNavigatedToTheDefaultPage()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"test123 will be saved as the password for the administrator and navigated to RapidCase Development Studio")]
    public void ThenTest123WillBeSavedAsThePasswordForTheAdministratorAndNavigatedToRapidCaseDevelopmentStudio()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I enter test123 as password and click the submit button")]
    public void WhenIEnterTest123AsPasswordAndClickTheSubmitButton()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at RapidCase.BasicSystem.Specifications.Setup.InitialSetUpFeature.ScenarioCleanup() in C:\Users\Johan\Documents\projects\RapidCase\RapidCase.BasicSystem.Specifications\Setup\InitalSetup1.feature.cs:line 0
   at RapidCase.BasicSystem.Specifications.Setup.InitialSetUpFeature.EnterANewPasswordForTheAdministrator() in c:\Users\Johan\Documents\projects\RapidCase\RapidCase.BasicSystem.Specifications\Setup\InitalSetup.feature:line 42
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="aa8453aa-340f-4777-bbb9-d511cba385b0" testId="1cf2fcd1-9bb4-7359-640e-ae1d47b72bd4" testName="SelectRemoteMachineAsDatabaseLocation" computerName="JOHAN-PC" duration="00:00:01.0163914" startTime="2012-03-04T19:23:31.8633438+01:00" endTime="2012-03-04T19:23:32.9064034+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="aa8453aa-340f-4777-bbb9-d511cba385b0">
      <Output>
        <StdOut>Given I start up the system for the first time
-&gt; done: InitalSetUpStepDefinitions.GivenIStartUpTheSystemForTheFirstTime() (0,0s)
And database location selection screen i showing
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"database location selection screen i showing")]
        public void GivenDatabaseLocationSelectionScreenIShowing()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I select that my database is on a remote machine. I enter 127.0.0.1 as database location, port 8080 as port and clicked save button
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [When(@"I select that my database is on a remote machine\. I enter 127\.0\.0\.1 as database location, port 8080 as port and clicked save button")]
        public void WhenISelectThatMyDatabaseIsOnARemoteMachine_IEnter127_0_0_1AsDatabaseLocationPort8080AsPortAndClickedSaveButton()
        {
            ScenarioContext.Current.Pending();
        }
    }

Then the database location i saved as http://127.0.0.1:8080
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"the database location i saved as http://127\.0\.0\.1:8080")]
        public void ThenTheDatabaseLocationISavedAsHttp127_0_0_18080()
        {
            ScenarioContext.Current.Pending();
        }
    }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"database location selection screen i showing")]
    public void GivenDatabaseLocationSelectionScreenIShowing()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"the database location i saved as http://127\.0\.0\.1:8080")]
    public void ThenTheDatabaseLocationISavedAsHttp127_0_0_18080()
    {
        ScenarioContext.Current.Pending();
    }
    
    [When(@"I select that my database is on a remote machine\. I enter 127\.0\.0\.1 as database location, port 8080 as port and clicked save button")]
    public void WhenISelectThatMyDatabaseIsOnARemoteMachine_IEnter127_0_0_1AsDatabaseLocationPort8080AsPortAndClickedSaveButton()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at RapidCase.BasicSystem.Specifications.Setup.InitialSetUpFeature.ScenarioCleanup() in C:\Users\Johan\Documents\projects\RapidCase\RapidCase.BasicSystem.Specifications\Setup\InitalSetup1.feature.cs:line 0
   at RapidCase.BasicSystem.Specifications.Setup.InitialSetUpFeature.SelectRemoteMachineAsDatabaseLocation() in c:\Users\Johan\Documents\projects\RapidCase\RapidCase.BasicSystem.Specifications\Setup\InitalSetup.feature:line 28
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="85ace593-7187-41d1-80cb-7c1bd86181b2" testId="5abbfa87-d65c-c25d-a8cd-0901fe713af4" testName="EnterSetupInformationCorrect" computerName="JOHAN-PC" duration="00:00:03.2294485" startTime="2012-03-04T19:23:32.9124038+01:00" endTime="2012-03-04T19:23:36.1455887+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="85ace593-7187-41d1-80cb-7c1bd86181b2">
      <Output>
        <StdOut>Given I start up the system for the first time
-&gt; done: InitalSetUpStepDefinitions.GivenIStartUpTheSystemForTheFirstTime() (0,0s)
And the database location is not set
-&gt; done: InitalSetUpStepDefinitions.GivenTheDatabaseLocationIsNotSet() (0,0s)
And the administration password is not set
-&gt; done: InitalSetUpStepDefinitions.GivenTheAdministrationPasswordIsNotSet() (0,0s)
And setup screen i showing
-&gt; done: InitalSetUpStepDefinitions.GivenSetupScreenIShowing() (1,9s)
When I select the default value local machine as database location, port 8080 as port
-&gt; done: InitalSetUpStepDefinitions.WhenISelectTheDefaultValueLocalMachineAsDatabaseLocationPort8080AsPort() (0,0s)
And I enter test as administration password
-&gt; done: InitalSetUpStepDefinitions.WhenIEnterTestAsAdministrationPassword() (0,2s)
And I click the save button
-&gt; done: InitalSetUpStepDefinitions.WhenIClickTheSaveButton() (0,1s)
Then the database location i saved as http://localhost:8080
-&gt; done: InitalSetUpStepDefinitions.ThenTheDatabaseLocationISavedAsHttpLocalhost8080() (0,0s)
And administration password i saved as test
-&gt; done: InitalSetUpStepDefinitions.ThenAdministrationPasswordISavedAsTest() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bebaacea-f2f0-4fe7-8f3c-bff1c1a3b281" testId="607ad56f-0bd1-54e5-69b6-976f368d808a" testName="ShowDatabaseLocationSelectionScreenIfDatabaseLocationIsMissing" computerName="JOHAN-PC" duration="00:00:02.6156013" startTime="2012-03-04T19:23:36.1525891+01:00" endTime="2012-03-04T19:23:38.7737390+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bebaacea-f2f0-4fe7-8f3c-bff1c1a3b281">
      <Output>
        <StdOut>Given I start up the system for the first time
-&gt; done: InitalSetUpStepDefinitions.GivenIStartUpTheSystemForTheFirstTime() (0,0s)
And the database location is not set
-&gt; done: InitalSetUpStepDefinitions.GivenTheDatabaseLocationIsNotSet() (0,0s)
When I navigate to the default page
-&gt; done: InitalSetUpStepDefinitions.WhenINavigateToTheDefaultPage() (1,6s)
Then I will be asked to enter the location of the database. Either I can select local and port number or a remote url and a port number.
-&gt; done: InitalSetUpStepDefinitions.ThenIWillBeAskedToEnterTheLocationOfTheDatabase_EitherICanSelectLocalAndPortNumberOrARemoteUrlAndAPortNumber_() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="796fc4d6-0e86-4d3f-bbc9-592a1b3b380b" testId="d03fd5bb-1d9d-bcd8-672f-ac6c1bcf1a73" testName="RequestPasswordForAdministratorIfItDoNotExist" computerName="JOHAN-PC" duration="00:00:01.0066648" startTime="2012-03-04T19:23:38.7767392+01:00" endTime="2012-03-04T19:23:39.7867970+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="796fc4d6-0e86-4d3f-bbc9-592a1b3b380b">
      <Output>
        <StdOut>Given Administrator do not have a password
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Given(@"Administrator do not have a password")]
        public void GivenAdministratorDoNotHaveAPassword()
        {
            ScenarioContext.Current.Pending();
        }
    }

When I navigate to the default page
-&gt; skipped because of previous errors
Then I be shown a password field to enter a new password and a button to submit it
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
    public class StepDefinitions
    {
        [Then(@"I be shown a password field to enter a new password and a button to submit it")]
        public void ThenIBeShownAPasswordFieldToEnterANewPasswordAndAButtonToSubmitIt()
        {
            ScenarioContext.Current.Pending();
        }
    }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"Administrator do not have a password")]
    public void GivenAdministratorDoNotHaveAPassword()
    {
        ScenarioContext.Current.Pending();
    }
    
    [Then(@"I be shown a password field to enter a new password and a button to submit it")]
    public void ThenIBeShownAPasswordFieldToEnterANewPasswordAndAButtonToSubmitIt()
    {
        ScenarioContext.Current.Pending();
    }
}
</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at RapidCase.BasicSystem.Specifications.Setup.InitialSetUpFeature.ScenarioCleanup() in C:\Users\Johan\Documents\projects\RapidCase\RapidCase.BasicSystem.Specifications\Setup\InitalSetup1.feature.cs:line 0
   at RapidCase.BasicSystem.Specifications.Setup.InitialSetUpFeature.RequestPasswordForAdministratorIfItDoNotExist() in c:\Users\Johan\Documents\projects\RapidCase\RapidCase.BasicSystem.Specifications\Setup\InitalSetup.feature:line 34
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>