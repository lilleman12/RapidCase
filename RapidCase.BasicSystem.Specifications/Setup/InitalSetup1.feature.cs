// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.239
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace RapidCase.BasicSystem.Specifications.Setup
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class InitialSetUpFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "InitalSetup.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Initial set up", "When I start up a system from scratch the system will ask me for some information" +
                    " as database location and administration password", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Initial set up")))
            {
                RapidCase.BasicSystem.Specifications.Setup.InitialSetUpFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Show database location selection screen if database location is missing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Initial set up")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("web")]
        public virtual void ShowDatabaseLocationSelectionScreenIfDatabaseLocationIsMissing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Show database location selection screen if database location is missing", new string[] {
                        "web"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("I start up the system for the first time");
#line 7
 testRunner.And("the database location is not set");
#line 8
 testRunner.When("I navigate to the default page");
#line 9
 testRunner.Then("I will be asked to enter the location of the database. Either I can select local " +
                    "and port number or a remote url and a port number.");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Enter setup information correct")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Initial set up")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("web")]
        public virtual void EnterSetupInformationCorrect()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Enter setup information correct", new string[] {
                        "web"});
#line 12
this.ScenarioSetup(scenarioInfo);
#line 13
 testRunner.Given("I start up the system for the first time");
#line 14
 testRunner.And("the database location is not set");
#line 15
 testRunner.And("the administration password is not set");
#line 16
 testRunner.And("setup screen i showing");
#line 17
 testRunner.When("I select the default value local machine as database location, port 8080 as port");
#line 18
 testRunner.And("I enter test as administration password");
#line 19
 testRunner.And("I click the save button");
#line 20
 testRunner.Then("the database location i saved as http://localhost:8080");
#line 21
 testRunner.And("administration password i saved as test");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Select remote machine as database location")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Initial set up")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("web")]
        public virtual void SelectRemoteMachineAsDatabaseLocation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Select remote machine as database location", new string[] {
                        "web"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
 testRunner.Given("I start up the system for the first time");
#line 26
 testRunner.And("the database location is not set");
#line 27
 testRunner.And("the administration password is not set");
#line 28
 testRunner.And("setup screen i showing");
#line 29
 testRunner.When("I select that my database is on a remote machine. I enter 127.0.0.1 as database l" +
                    "ocation, port 8080 as port");
#line 30
 testRunner.And("I enter test as administration password");
#line 31
 testRunner.And("I click the save button");
#line 32
 testRunner.Then("the database location i saved as http://127.0.0.1:8080");
#line 33
 testRunner.And("administration password i saved as test");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
